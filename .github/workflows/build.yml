name: build

on: [push, pull_request]

jobs:
  ubuntu:
    strategy:
      matrix:
        include:
          # Ubuntu 22.04
          - year: 22
            pkg: g++-9
            exe: g++-9
          - year: 22
            pkg: g++-10
            exe: g++-10
          - year: 22
            pkg: g++-11
            exe: g++-11
          - year: 22
            pkg: g++-12
            exe: g++-12
          - year: 22
            pkg: clang-11 libomp-11-dev
            exe: clang++-11
          - year: 22
            pkg: clang-12 libomp-12-dev
            exe: clang++-12
          - year: 22
            pkg: clang-13 libomp-13-dev
            exe: clang++-13
          - year: 22
            pkg: clang-14 libomp-14-dev
            exe: clang++-14
          - year: 22
            pkg: clang-15 libomp-15-dev
            exe: clang++-15

          # Ubuntu 24.04
          - year: 24
            pkg: g++-9
            exe: g++-9
          - year: 24
            pkg: g++-10
            exe: g++-10
          - year: 24
            pkg: g++-11
            exe: g++-11
          - year: 24
            pkg: g++-12
            exe: g++-12
          - year: 24
            pkg: g++-13
            exe: g++-13
          - year: 24
            pkg: g++-14
            exe: g++-14
          - year: 24
            pkg: clang-14 libomp-14-dev
            exe: clang++-14
          - year: 24
            pkg: clang-15 libomp-15-dev
            exe: clang++-15
          - year: 24
            pkg: clang-16 libomp-16-dev
            exe: clang++-16
          - year: 24
            pkg: clang-17 libomp-17-dev
            exe: clang++-17
          - year: 24
            pkg: clang-18 libomp-18-dev
            exe: clang++-18

    runs-on: ubuntu-${{ matrix.year }}.04

    steps:
    - uses: actions/checkout@v4
    - name: Install compiler
      run: |
        sudo apt update
        sudo apt install -y ${{ matrix.pkg }}
    - name: Configure CMake
      env:
        CXX: ${{ matrix.exe }}
      run: cmake -B ${{github.workspace}}/build -DXPU_BUILD_TESTS=ON -DXPU_BUILD_EXAMPLES=ON
    - name: Build
      run: cmake --build ${{github.workspace}}/build -j4
    - name: Test
      working-directory: ${{github.workspace}}/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest

  linux-gpu:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Configure CMake
      run: |
        . /opt/intel/oneapi/setvars.sh
        cmake -B ${{github.workspace}}/build -DXPU_ENABLE_SYCL=ON -DXPU_ENABLE_CUDA=ON -DXPU_ENABLE_HIP=ON -DXPU_BUILD_TESTS=ON -DXPU_BUILD_EXAMPLES=ON
    - name: Build
      run: |
        . /opt/intel/oneapi/setvars.sh
        cmake --build ${{github.workspace}}/build -j4
    - name: Test
      working-directory: ${{github.workspace}}/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest -j4 -E sycl

  cpp-future:

    runs-on: ubuntu-24.04

    strategy:
      matrix:
        compiler:
          - pkg: g++-14
            cc: g++-14
          - pkg: clang-18 libomp-18-dev
            cc: clang++-18
        cxx_std: [20, 23]

    steps:
    - uses: actions/checkout@v4

    - name: Install compiler
      run: |
        sudo apt update
        sudo apt install -y ${{ matrix.compiler.pkg }}

    - name: Configure CMake
      env:
        CXX: ${{ matrix.compiler.cc }}
      run: cmake -B ${{github.workspace}}/build -DCMAKE_CXX_STANDARD=${{ matrix.cxx_std }} -DXPU_BUILD_TESTS=ON -DXPU_BUILD_EXAMPLES=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build -j4

    - name: Test
      working-directory: ${{github.workspace}}/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest

  macos:
    strategy:
      matrix:
        version: [13, 14, 15]

    runs-on: macos-${{ matrix.version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup without OpenMP
      run: cmake -B ${{github.workspace}}/build -DXPU_BUILD_TESTS=ON -DXPU_BUILD_EXAMPLES=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build -j4

    - name: Test
      working-directory: ${{github.workspace}}/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest
