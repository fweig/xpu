project(@Library@_@DriverType@)
cmake_minimum_required(VERSION 3.18)

if (@DriverType@ STREQUAL "Cuda")
    enable_language(CUDA)
    set(CMAKE_CUDA_STANDARD ${CMAKE_CXX_STANDARD})
    if (@XPU_DEBUG@)
        set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} --debug --device-debug")
    else()
        add_definitions(-DNDEBUG)
    endif()
    set(CMAKE_CUDA_ARCHITECTURES @XPU_CUDA_ARCH@)
    set_source_files_properties(@UnitySrcAbsolute@ PROPERTIES LANGUAGE CUDA)
endif()

if ("@DriverType@" STREQUAL "Hip")
    if (@XPU_STANDALONE@)
        add_compile_options(-Wall -Wextra -Werror)
    endif()
    if (@XPU_DEBUG@)
        add_compile_options(-Og -g3)
    else()
        add_compile_options(-O3)
        add_definitions(-DNDEBUG)
    endif()

    # CMake sometimes doesn't set the c++ standard defined with CMAKE_CXX_STANDARD for amd-clang
    # Unsure when or why this happens, so just to be on the safe side, set the flag explicitly here...
    if (CMAKE_CXX_STANDARD EQUAL 17)
        add_compile_options(-std=c++17)
    elseif (CMAKE_CXX_STANDARD EQUAL 20)
        add_compile_options(-std=c++20)
    elseif (CMAKE_CXX_STANDARD EQUAL 23)
        add_compile_options(-std=c++23)
    else ()
        message(FATAL_ERROR, "Unknown C++ standard: ${CMAKE_CXX_STANDARD}")
    endif()

    # Hip sets some clang flags that results in warnings
    add_compile_options(-Qunused-arguments)
    set(GPU_TARGETS "@XPU_HIP_ARCH@")
    list(APPEND CMAKE_PREFIX_PATH "@XPU_ROCM_ROOT@/hip" "@XPU_ROCM_ROOT@")
    find_package(hip REQUIRED)

    # On ROCm hipCUB requires rocPRIM
    find_package(rocprim REQUIRED CONFIG PATHS "@XPU_ROCM_ROOT@/rocprim")

    # "/opt/rocm" - default install prefix
    find_package(hipcub REQUIRED CONFIG PATHS "@XPU_ROCM_ROOT@/hipcub")
endif()

if ("@DriverType@" STREQUAL "Sycl")
    message(STATUS "SYCL HOST CXX: @HostCxx@")
    set(SYCL_FLAGS -fsycl -fsycl-targets=@XPU_SYCL_TARGETS@)
    message(STATUS "SYCL FLAGS: ${SYCL_FLAGS}")
    add_compile_options(${SYCL_FLAGS})
    if (@XPU_STANDALONE@)
        add_compile_options(-Wall -Wextra -Werror)
    endif()
    if (@XPU_DEBUG@)
        add_compile_options(-Og -g3)
    else()
        add_compile_options(-O3)
        add_definitions(-DNDEBUG)
    endif()
    add_link_options(${SYCL_FLAGS})
endif()

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Try to get complete list of include directories with this: https://stackoverflow.com/questions/43554085/target-link-libraries-and-include-directories-property
# include_directories(@IncludeDirectories@)
include(@Library@_@DriverType@-include-dirs.cmake)
add_library(@Library@_@DriverType@ MODULE @UnitySrcAbsolute@)

if ("@DriverType@" STREQUAL "Hip")
    target_link_libraries(@Library@_@DriverType@ hip::device hip::hipcub)
endif()
